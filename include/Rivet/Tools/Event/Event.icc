// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the Event class.
//

namespace Rivet {

inline Event::Event(const Event & x)
  : theGenEvent(x.theGenEvent), theWeight(x.theWeight) {}

inline const HepMC::GenEvent & Event::genEvent() const {
  return *theGenEvent;
}

template <typename PROJ>
inline const PROJ &  Event::addProjection(PROJ & p) const {
  std::set<const Projection *>::const_iterator old = theProjections.find(&p);
  if ( old != theProjections.end() ) {
    return *(dynamic_cast<const PROJ*>(*old));
  }
  // Add the projection via the Projection base class (only 
  // possible because Event is a friend of Projection)
  FinalStateProjection * pp = &p;
  pp->project(*this);
  theProjections.insert(&p);
  return p;
}

template <typename PROJ>
inline const PROJ& Event::operator()(PROJ & p) const {
  std::cerr << "Event::() is deprecated" << std::endl;
  return addProjection(p);
}

inline double Event::weight() const {
  return theWeight;
}

}
