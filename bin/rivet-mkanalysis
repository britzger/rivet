#! /usr/bin/env bash

prog=$(basename $0)

tmp=$(echo $* | egrep -- '--\<help\>|-\<h\>')
if [[ $# -eq 0 || -n "$tmp" ]]; then
    echo "$prog: make templates of analysis source files for Rivet"
    echo
    echo "Usage: $prog [--help|-h] [--srcroot=<srcrootdir>] <analysisname>"
    echo "Options:"
    echo "  --help | -h   : show this help message"
    echo "  --srcroot     : install the templates into the Rivet source tree"
    echo "                  (rooted at the given directory) rather than just"
    echo "                  creating all in the current dir"
fi


ANANAMES=""
for i in $*; do
    tmp=$(echo $i | egrep "^--")
    if [[ -z "$tmp" ]]; then
        ANANAMES="$ANANAMES $i"
    fi
done


ANASRCDIR="."
ANAINFODIR="."
ANAPLOTDIR="."
tmp=$(echo $* | egrep -- '--\<srcroot')
if [[ "$tmp" ]]; then
    tmp=$(echo $* | egrep -- '--\<srcroot\>=[^[:space:][:cntrl:]]+')
    echo $tmp
    if [[ "$tmp" ]]; then
        srcroot=$(echo $tmp | sed -e 's:^.*--srcroot=\([^\ ]\+\).*$:\1:')
        if [[ ! -e "$srcroot" ]]; then
            echo "Rivet source root dir $srcroot does not exist" 1>&2
            exit 1
        fi
    else
        srcroot="."
    fi
    ANASRCDIR="$srcroot/src/Analyses"
    ANAINFODIR="$srcroot/data/anainfo"
    ANAPLOTDIR="$srcroot/data/plotinfo"
    if [[ ! -e "$ANASRCDIR" || ! -e "$ANAINFODIR" || ! -e "$ANAPLOTDIR" ]]; then
        echo "Rivet analysis dirs do not exist under $srcroot" 1>&2
        exit 1
    fi
fi


if [[ ! -w "$ANASRCDIR" || ! -w "$ANAINFODIR" || ! -w "$ANAPLOTDIR" ]]; then
    echo "Can't write to Rivet analysis dirs under $srcroot" 1>&2
    exit 1
fi


for ANANAME in $ANANAMES; do
    tmp=$(echo "$ANANAME" | egrep "[^[:alnum:]_]")
    if [[ -n "$tmp" ]]; then
        echo "$ANANAME contains bad characters --- skipping!" 1>&2
        continue
    fi

    tmp=$(echo "$ANANAME" | egrep "[[:alnum:]]+_[[:digit:]]+_S[[:digit:]]+")
    if [[ -n "$tmp" ]]; then
        ANAEXPT=$(echo "$ANANAME" | sed -e 's:^\([^_]\+\)_\([^_]\+\)_S\([^_]\+\)$:\1:')
        ANAYEAR=$(echo "$ANANAME" | sed -e 's:^\([^_]\+\)_\([^_]\+\)_S\([^_]\+\)$:\2:')
        ANASPIRESID=$(echo "$ANANAME" | sed -e 's:^\([^_]\+\)_\([^_]\+\)_S\([^_]\+\)$:\3:')
    fi

    ANASRCFILE="$ANASRCDIR/$ANANAME.cc"
    echo "Writing implementation template to $ANASRCFILE"
    cat <<EOF > "$ANASRCFILE"
// -*- C++ -*-
#include "Rivet/Analysis.hh"
#include "Rivet/RivetAIDA.hh"
#include "Rivet/Tools/Logging.hh"
#include "Rivet/Projections/FinalState.hh"
/// @todo Include more projections as required, e.g. ChargedFinalState, FastJets, ZFinder...

namespace Rivet {


  class $ANANAME : public Analysis {
  public:

    /// @name Constructors etc.
    //@{

    /// Constructor
    $ANANAME()
      : Analysis("$ANANAME") 
    {
      /// @todo Set approriate for your analysis
      setBeams(PROTON, ANTIPROTON);
      
      /// @todo Set whether your finalize method needs the generator cross section
      setNeedsCrossSection(true);
    }

    //@}


  public:

    /// @name Analysis methods
    //@{

    /// Book histograms and initialise projections before the run
    void init() {

      /// @todo Initialise and register projections here

      /// @todo Book histograms here, e.g.:
      // _histXXXX = bookProfile1D(1, 1, 1);
      // _histYYYY = bookHistogram1D(2, 1, 1);

    }


    /// Perform the per-event analysis
    void analyze(const Event& event) {
      const double weight = event.weight();

      /// @todo Do the event by event analysis here

    }


    /// Normalise histograms etc., after the run
    void finalize() {
      
      /// @todo Normalise, scale and otherwise manipulate histograms here
      
      // scale(_histYYYY, crossSection()/sumOfWeights()); # norm to cross section
      // normalize(_histYYYY); # normalize to unity
      
    }

    //@}


  private:

    // Data members like post-cuts event weight counters go here


  private:

    /// @name Histograms
    //@{

    AIDA::IProfile1D *_histXXXX;
    AIDA::IHistogram1D *_histYYYY;
    //@}

  };



  // This global object acts as a hook for the plugin system
  AnalysisBuilder<$ANANAME> plugin_$ANANAME;


}
EOF


    ANAINFOFILE="$ANAINFODIR/$ANANAME.info"
    echo "Writing info template to $ANAINFOFILE"
    cat <<EOF > "$ANAINFOFILE"
Name: $ANANAME
Year: $ANAYEAR
Summary: [Insert short $ANANAME description]
Experiment: $ANAEXPT
Collider: [Insert $ANANAME collider]
SpiresID: $ANASPIRESID
Status: UNVALIDATED
Authors:
 - Your Name <your@email.address>
References:
 - [Example: Phys.Lett.B639:151-158,2006, Erratum-ibid.B658:285-289,2008]
 - [Example: doi:10.1016/j.physletb.2006.04.048]
 - [Example: arXiv:hep-ex/0511054 (plus erratum)]
RunInfo:
  [Insert event types (not gen-specific), energy, any kinematic
  efficiency cut(s) that may be needed, essentially any details needed to set
  up a generator to reproduce the data.]
NumEvents: [Insert typical number of events needed for good statistics.]
PtCuts: [Insert list of ptcuts, e.g. [15]]
Description:
  [Insert a fairly long description, including what is measured
  and if possible what it's useful for in terms of MC validation
  and tuning. Use \LaTeX for maths like $\pT > \unit{50}{\GeV}$.]
EOF

    ANAPLOTFILE="$ANAPLOTDIR/$ANANAME.plot"
    echo "Writing plot template to $ANAPLOTFILE"
    cat <<EOF > "$ANAPLOTFILE"
# BEGIN PLOT /$ANANAME/d01-x01-y01
Title=[Insert title for histogram d01-x01-y01 here]
XLabel=[Insert x-axis label for histogram d01-x01-y01 here]
YLabel=[Insert y-axis label for histogram d01-x01-y01 here]
# + any additional plot settings you might like, see make-plots documentation
# END PLOT

# ... add more histograms as you need them ...
EOF

done
