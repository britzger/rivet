#! /usr/bin/env python

"""This is a simple SWIG wrapper on the main steering interface of
the Rivet event simulation analysis library. It is used to create, query and
use the Rivet C++ analysis classes from a Python program, of which the prime
customer is Rivet's own command line interface.
"""

from distutils.core import setup, Extension

## Extension definition
import os
wrapsrc = '@srcdir@/rivet/rivetwrap_wrap.cc'
incdir_src = os.path.abspath('@top_srcdir@/include')
incdir_build = os.path.abspath('@top_builddir@/include')
libdir = os.path.abspath('@top_builddir@/src/.libs')
libdir_yaml = '@YAML_CPPLIBPATH@'

# TODO: remove along with the yaml-cpp bundling
if not libdir_yaml:
    libdir_yaml = '@top_builddir@/src/Tools/yaml-cpp/.libs'

ext = Extension('_rivetwrap',
                [wrapsrc],
                define_macros = [('SWIG_TYPE_TABLE', 'hepmccompat')],
                include_dirs=[incdir_src, incdir_build, '@HEPMCINCPATH@', '@GSLINCPATH@'],
                extra_compile_args= "-I@prefix@/include @BOOST_CPPFLAGS@ @CXXFLAGS@".split(),
                library_dirs=[libdir, libdir_yaml, '@HEPMCLIBPATH@'],
                extra_link_args = "-L@prefix@/lib @LDFLAGS@".split(),
                libraries=['HepMC', 'Rivet'])

## Setup definition
setup(name = 'Rivet',
      version = '@PACKAGE_VERSION@',
      ext_package = 'rivet',
      ext_modules = [ext],
      py_modules = ['rivet.rivetwrap', 'rivet.__init__', 'rivet.plotinfo', 'rivet.util', 'rivet.spiresbib'],
      author = ['Andy Buckley'],
      author_email = 'andy.buckley@cern.ch',
      url = 'http://projects.hepforge.org/rivet/',
      description = 'Rivet: a Python interface to the Rivet high-energy physics analysis library.',
      long_description = __doc__,
      keywords = 'generator montecarlo simulation data hep physics particle validation analysis tuning',
      license = 'GPL'
      )
