#! /usr/bin/env python

from distutils.core import setup
from distutils.extension import Extension
from Cython.Distutils import build_ext
from glob import glob

PKGNAME = 'rivet'

## Extension definition
import os.path
incdir = os.path.abspath('@top_srcdir@/include')
srcdir = os.path.abspath('@top_srcdir@/src')
libdir = os.path.abspath("@top_builddir@/src/.libs")

## A helper function (since we have two modules now...)
def ext(name, depends=[], statics=[]):
    return Extension(
        '%s.%s' % (PKGNAME, name),
        ['%s/%s.pyx' % (PKGNAME, name)] + statics,
        language='c++',
        depends=depends,
        include_dirs=[incdir, PKGNAME],
        extra_compile_args= "-I@prefix@/include @BOOST_CPPFLAGS@ @PYEXT_CXXFLAGS@".split(),
        library_dirs=[libdir],
        extra_link_args = ["-L@prefix@/lib"],
        libraries=['stdc++', 'Rivet'])

header_files = glob('../include/Rivet/*.h') + glob('../include/Rivet/Utils/*.h')

extns = [ext('core', header_files)]
#         ext('rootcompat')]

setup(name = PKGNAME,
      ext_modules = extns,
      cmdclass = dict(build_ext=build_ext),
      packages = [PKGNAME])
